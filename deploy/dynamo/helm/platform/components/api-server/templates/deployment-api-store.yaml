# SPDX-FileCopyrightText: Copyright (c) 2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dynamo-api-store
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dynamo-api-store
  template:
    metadata:
      labels:
        app: dynamo-api-store
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "helm.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: wait-for-postgres
          image: busybox
          command: [ 'sh', '-c', 'until nc -z {{ .Release.Name }}-postgresql 5432; do echo "PostgreSQL is unavailable. Sleeping for 5 seconds"; sleep 5; done;' ]
      containers:
        - name: "api-store"
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          imagePullPolicy: {{ .Values.storeImage.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.dynamo.apiStore.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: DB_HOST
              value:  "{{ .Release.Name }}-postgresql"
            - name: DB_USER
              value: {{ .Values.postgresql.auth.username | quote }}
            - name: DB_NAME
              value: {{ .Values.postgresql.auth.database | quote }}
            - name: DB_PORT
              value: "5432"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-postgresql"
                  key: password
            - name: SERVICE_PORT
              value: "8000"
            - name: RESOURCE_SCOPE
              value: {{ .Values.dynamo.env.resource_scope | quote }}
            - name: DEFAULT_KUBE_NAMESPACE
              value: {{ .Release.Namespace }}
            - name: DYN_OBJECT_STORE_BUCKET
              value: "dynamo-storage"
            - name: DYN_OBJECT_STORE_ID
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-minio"
                  key: root-user
            - name: DYN_OBJECT_STORE_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-minio"
                  key: root-password
            - name: DYN_OBJECT_STORE_ENDPOINT
              value: "http://{{ .Release.Name }}-minio:9000"
          envFrom:
          - secretRef:
              name: dynamo-deployment-env
          image: "{{ .Values.storeImage.repository }}:{{ .Values.storeImage.tag | default .Chart.AppVersion }}"
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      imagePullSecrets: {{ .Values.imagePullSecrets | default list | toJson }}